<class name="Array" category="Built-In Types"><brief_description>Generic array datatype.
</brief_description><description>Generic array, contains several elements of any type, accessible by numerical index starting at 0. Arrays are always passed by reference.
</description><methods><method name="Array"><return type="Array"></return><argument index="0" name="from" type="ColorArray"></argument><description>Construct an array from a [RawArray].
</description></method><method name="Array"><return type="Array"></return><argument index="0" name="from" type="Vector3Array"></argument><description>Construct an array from a [RawArray].
</description></method><method name="Array"><return type="Array"></return><argument index="0" name="from" type="Vector2Array"></argument><description>Construct an array from a [RawArray].
</description></method><method name="Array"><return type="Array"></return><argument index="0" name="from" type="StringArray"></argument><description>Construct an array from a [RawArray].
</description></method><method name="Array"><return type="Array"></return><argument index="0" name="from" type="RealArray"></argument><description>Construct an array from a [RawArray].
</description></method><method name="Array"><return type="Array"></return><argument index="0" name="from" type="IntArray"></argument><description>Construct an array from a [RawArray].
</description></method><method name="Array"><return type="Array"></return><argument index="0" name="from" type="RawArray"></argument><description>Construct an array from a [RawArray].
</description></method><method name="append"><argument index="0" name="value" type="var"></argument><description>Append an element at the end of the array (alias of [method push_back]).
</description></method><method name="clear"><description>Clear the array (resize to 0).
</description></method><method name="empty"><return type="bool"></return><description>Return true if the array is empty (size==0).
</description></method><method name="erase"><argument index="0" name="value" type="var"></argument><description>Remove the first occurrence of a value from the array.
</description></method><method name="find"><return type="int"></return><argument index="0" name="value" type="var"></argument><description>Searches the array for a value and returns its index or -1 if not found.
</description></method><method name="hash"><return type="int"></return><description>Return a hashed integer value representing the array contents.
</description></method><method name="insert"><argument index="0" name="pos" type="int"></argument><argument index="1" name="value" type="var"></argument><description>Insert a new element at a given position in the array. The position must be valid, or at the end of the array (pos==size()).
</description></method><method name="invert"><description>Reverse the order of the elements in the array (so first element will now be the last).
</description></method><method name="is_shared"><return type="bool"></return><description>Get whether this is a shared array instance.
</description></method><method name="pop_back"><description>Remove the last element of the array.
</description></method><method name="pop_front"><description>Remove the first element of the array.
</description></method><method name="push_back"><argument index="0" name="value" type="var"></argument><description>Append an element at the end of the array.
</description></method><method name="push_front"><argument index="0" name="value" type="var"></argument><description>Add an element at the beginning of the array.
</description></method><method name="remove"><argument index="0" name="pos" type="int"></argument><description>Remove an element from the array by index.
</description></method><method name="resize"><argument index="0" name="pos" type="int"></argument><description>Resize the array to contain a different number of elements. If the array size is smaller, elements are cleared, if bigger, new elements are Null.
</description></method><method name="size"><return type="int"></return><description>Return the amount of elements in the array.
</description></method><method name="sort"><description>Sort the array using natural order.
</description></method><method name="sort_custom"><argument index="0" name="obj" type="Object"></argument><argument index="1" name="func" type="String"></argument><description>Sort the array using a custom method. The arguments are an object that holds the method and the name of such method. The custom method receives two arguments (a pair of elements from the array) and must return true if the first argument is less than the second, and return false otherwise.
</description></method></methods><constants></constants></class>