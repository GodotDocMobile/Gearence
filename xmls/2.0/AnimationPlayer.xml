<class name="AnimationPlayer" inherits="Node" category="Core"><brief_description>Container and player of [Animation] resources.
</brief_description><description>An animation player is used for general purpose playback of [Animation] resources. It contains a dictionary of animations (referenced by name) and custom blend times between their transitions. Additionally, animations can be played and blended in different channels.
</description><methods><method name="add_animation"><return type="int"></return><argument index="0" name="name" type="String"></argument><argument index="1" name="animation" type="Animation"></argument><description>Add an animation resource to the player, which will be later referenced by the "name" argument.
</description></method><method name="advance"><argument index="0" name="delta" type="float"></argument><description>Used to skip ahead or skip back in an animation. Delta is the time in seconds to skip.
</description></method><method name="animation_get_next" qualifiers="const"><return type="String"></return><argument index="0" name="anim_from" type="String"></argument><description></description></method><method name="animation_set_next"><argument index="0" name="anim_from" type="String"></argument><argument index="1" name="anim_to" type="String"></argument><description></description></method><method name="clear_caches"><description>The animation player creates caches for faster access to the nodes it will animate. However, if a specific node is removed, it may not notice it, so clear_caches will force the player to search for the nodes again.
</description></method><method name="clear_queue"><description>If animations are queued to play, clear them.
</description></method><method name="find_animation" qualifiers="const"><return type="String"></return><argument index="0" name="animation" type="Animation"></argument><description>Find an animation name by resource.
</description></method><method name="get_animation" qualifiers="const"><return type="Animation"></return><argument index="0" name="name" type="String"></argument><description>Get an [Animation] resource by requesting a name.
</description></method><method name="get_animation_list" qualifiers="const"><return type="StringArray"></return><description>Get the list of names of the animations stored in the player.
</description></method><method name="get_animation_process_mode" qualifiers="const"><return type="int"></return><description>Return the mode in which the animation player processes. See [method set_animation_process_mode].
</description></method><method name="get_autoplay" qualifiers="const"><return type="String"></return><description>Return the name of the animation that will be automatically played when the scene is loaded.
</description></method><method name="get_blend_time" qualifiers="const"><return type="float"></return><argument index="0" name="anim_from" type="String"></argument><argument index="1" name="anim_to" type="String"></argument><description>Get the blend time between two animations, referenced by their names.
</description></method><method name="get_current_animation" qualifiers="const"><return type="String"></return><description>Return the name of the animation being played.
</description></method><method name="get_current_animation_length" qualifiers="const"><return type="float"></return><description>Get the length (in seconds) of the currently being played animation.
</description></method><method name="get_current_animation_pos" qualifiers="const"><return type="float"></return><description>Get the position (in seconds) of the currently being played animation.
</description></method><method name="get_default_blend_time" qualifiers="const"><return type="float"></return><description>Return the default blend time between animations.
</description></method><method name="get_pos" qualifiers="const"><return type="float"></return><description>Return the playback position (in seconds) in an animation channel (or channel 0 if none is provided).
</description></method><method name="get_root" qualifiers="const"><return type="NodePath"></return><description>Return path to root node (see [method set_root]).
</description></method><method name="get_speed" qualifiers="const"><return type="float"></return><description>Get the speed scaling ratio in a given animation channel (or channel 0 if none is provided). Default ratio is [i]1[/i] (no scaling).
</description></method><method name="has_animation" qualifiers="const"><return type="bool"></return><argument index="0" name="name" type="String"></argument><description>Request whether an [Animation] name exist within the player.
</description></method><method name="is_active" qualifiers="const"><return type="bool"></return><description>Return true if the player is active.
</description></method><method name="is_playing" qualifiers="const"><return type="bool"></return><description>Return whether an animation is playing.
</description></method><method name="play"><argument index="0" name="name" type="String" default="&quot;&quot;"></argument><argument index="1" name="custom_blend" type="float" default="-1"></argument><argument index="2" name="custom_speed" type="float" default="1"></argument><argument index="3" name="from_end" type="bool" default="false"></argument><description>Play a given animation by the animation name. Custom speed and blend times can be set. If custom speed is negative (-1), 'from_end' being true can play the animation backwards.
</description></method><method name="play_backwards"><argument index="0" name="name" type="String" default="&quot;&quot;"></argument><argument index="1" name="custom_blend" type="float" default="-1"></argument><description>Play a given animation by the animation name in reverse.
</description></method><method name="queue"><argument index="0" name="name" type="String"></argument><description>Queue an animation for playback once the current one is done.
</description></method><method name="remove_animation"><argument index="0" name="name" type="String"></argument><description>Remove an animation from the player (by supplying the same name used to add it).
</description></method><method name="rename_animation"><argument index="0" name="name" type="String"></argument><argument index="1" name="newname" type="String"></argument><description>Rename an existing animation.
</description></method><method name="seek"><argument index="0" name="pos_sec" type="float"></argument><argument index="1" name="update" type="bool" default="false"></argument><description>Seek the animation to a given position in time (in seconds). If 'update' is true, the animation will be updated too, otherwise it will be updated at process time.
</description></method><method name="set_active"><argument index="0" name="active" type="bool"></argument><description>Set the player as active (playing). If false, it
will do nothing.
</description></method><method name="set_animation_process_mode"><argument index="0" name="mode" type="int"></argument><description>Set the mode in which the animation player processes. By default, it processes on idle time (framerate dependent), but using fixed time works well for animating static collision bodies in 2D and 3D. See enum ANIMATION_PROCESS_*.
</description></method><method name="set_autoplay"><argument index="0" name="name" type="String"></argument><description>Set the name of the animation that will be automatically played when the scene is loaded.
</description></method><method name="set_blend_time"><argument index="0" name="anim_from" type="String"></argument><argument index="1" name="anim_to" type="String"></argument><argument index="2" name="sec" type="float"></argument><description>Specify a blend time (in seconds) between two animations, referenced by their names.
</description></method><method name="set_current_animation"><argument index="0" name="anim" type="String"></argument><description>Set the current animation (even if no playback occurs). Using set_current_animation() and set_active() are similar to calling play().
</description></method><method name="set_default_blend_time"><argument index="0" name="sec" type="float"></argument><description>Set the default blend time between animations.
</description></method><method name="set_root"><argument index="0" name="path" type="NodePath"></argument><description>AnimationPlayer resolves animation track paths from this node (which is relative to itself), by default root is "..", but it can be changed.
</description></method><method name="set_speed"><argument index="0" name="speed" type="float"></argument><description>Set a speed scaling ratio in a given animation channel (or channel 0 if none is provided). Default ratio is [i]1[/i] (no scaling).
</description></method><method name="stop"><argument index="0" name="reset" type="bool" default="true"></argument><description>Stop the currently playing animation.
</description></method><method name="stop_all"><description>Stop playback of animations (deprecated).
</description></method></methods><signals><signal name="animation_changed"><argument index="0" name="old_name" type="String"></argument><argument index="1" name="new_name" type="String"></argument><description>If the currently being played animation changes, this signal will notify of such change.
</description></signal><signal name="finished"><description>Notifies when an animation finished playing.
</description></signal></signals><constants><constant name="ANIMATION_PROCESS_FIXED" value="0">Process animation on fixed process. This is specially useful when animating kinematic bodies.
</constant><constant name="ANIMATION_PROCESS_IDLE" value="1">Process animation on idle process.
</constant></constants></class>