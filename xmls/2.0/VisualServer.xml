<class name="VisualServer" inherits="Object" category="Core"><brief_description>Server for anything visible.
</brief_description><description>Server for anything visible. The visual server is the API backend for everything visible. The whole scene system mounts on it to display.
The visual server is completely opaque, the internals are entirely implementation specific and cannot be accessed.
</description><methods><method name="black_bars_set_images"><argument index="0" name="left" type="RID"></argument><argument index="1" name="top" type="RID"></argument><argument index="2" name="right" type="RID"></argument><argument index="3" name="bottom" type="RID"></argument><description></description></method><method name="black_bars_set_margins"><argument index="0" name="left" type="int"></argument><argument index="1" name="top" type="int"></argument><argument index="2" name="right" type="int"></argument><argument index="3" name="bottom" type="int"></argument><description></description></method><method name="camera_create"><return type="RID"></return><description></description></method><method name="camera_set_orthogonal"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="float"></argument><argument index="2" name="arg2" type="float"></argument><argument index="3" name="arg3" type="float"></argument><description></description></method><method name="camera_set_perspective"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="float"></argument><argument index="2" name="arg2" type="float"></argument><argument index="3" name="arg3" type="float"></argument><description></description></method><method name="camera_set_transform"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="Transform"></argument><description></description></method><method name="canvas_create"><return type="RID"></return><description></description></method><method name="canvas_item_add_circle"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="Vector2"></argument><argument index="2" name="arg2" type="float"></argument><argument index="3" name="arg3" type="Color"></argument><description></description></method><method name="canvas_item_add_line"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="Vector2"></argument><argument index="2" name="arg2" type="Vector2"></argument><argument index="3" name="arg3" type="Color"></argument><argument index="4" name="arg4" type="float" default="1"></argument><description></description></method><method name="canvas_item_add_rect"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="Rect2"></argument><argument index="2" name="arg2" type="Color"></argument><description></description></method><method name="canvas_item_add_style_box"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="Rect2"></argument><argument index="2" name="arg2" type="RID"></argument><argument index="3" name="arg3" type="RealArray"></argument><argument index="4" name="arg4" type="Color" default="Color(1,1,1,1)"></argument><description></description></method><method name="canvas_item_add_texture_rect"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="Rect2"></argument><argument index="2" name="arg2" type="RID"></argument><argument index="3" name="arg3" type="bool"></argument><argument index="4" name="arg4" type="Color" default="Color(1,1,1,1)"></argument><argument index="5" name="arg5" type="bool" default="false"></argument><description></description></method><method name="canvas_item_add_texture_rect_region"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="Rect2"></argument><argument index="2" name="arg2" type="RID"></argument><argument index="3" name="arg3" type="Rect2"></argument><argument index="4" name="arg4" type="Color" default="Color(1,1,1,1)"></argument><argument index="5" name="arg5" type="bool" default="false"></argument><description></description></method><method name="canvas_item_clear"><argument index="0" name="arg0" type="RID"></argument><description></description></method><method name="canvas_item_create"><return type="RID"></return><description></description></method><method name="canvas_item_get_opacity" qualifiers="const"><return type="float"></return><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="float"></argument><description></description></method><method name="canvas_item_get_parent" qualifiers="const"><return type="RID"></return><argument index="0" name="arg0" type="RID"></argument><description></description></method><method name="canvas_item_get_self_opacity" qualifiers="const"><return type="float"></return><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="float"></argument><description></description></method><method name="canvas_item_raise"><argument index="0" name="arg0" type="RID"></argument><description></description></method><method name="canvas_item_set_clip"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="bool"></argument><description></description></method><method name="canvas_item_set_custom_rect"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="bool"></argument><argument index="2" name="arg2" type="Rect2"></argument><description></description></method><method name="canvas_item_set_opacity"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="float"></argument><description></description></method><method name="canvas_item_set_parent"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="RID"></argument><description></description></method><method name="canvas_item_set_self_opacity"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="float"></argument><description></description></method><method name="canvas_item_set_transform"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="Matrix32"></argument><description></description></method><method name="canvas_item_set_z"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="int"></argument><description></description></method><method name="cursor_set_pos"><argument index="0" name="arg0" type="Vector2"></argument><argument index="1" name="arg1" type="int"></argument><description></description></method><method name="cursor_set_rotation"><argument index="0" name="arg0" type="float"></argument><argument index="1" name="arg1" type="int"></argument><description></description></method><method name="cursor_set_texture"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="Vector2"></argument><argument index="2" name="arg2" type="int"></argument><description></description></method><method name="cursor_set_visible"><argument index="0" name="arg0" type="bool"></argument><argument index="1" name="arg1" type="int"></argument><description></description></method><method name="draw"><description></description></method><method name="free_rid"><argument index="0" name="arg0" type="RID"></argument><description></description></method><method name="get_render_info"><return type="int"></return><argument index="0" name="arg0" type="int"></argument><description></description></method><method name="get_test_cube"><return type="RID"></return><description></description></method><method name="instance_attach_object_instance_ID"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="int"></argument><description></description></method><method name="instance_attach_skeleton"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="RID"></argument><description></description></method><method name="instance_create"><return type="RID"></return><description></description></method><method name="instance_geometry_get_material_param" qualifiers="const"><return type="RID"></return><argument index="0" name="arg0" type="RID"></argument><description></description></method><method name="instance_geometry_override_material_param" qualifiers="const"><return type="RID"></return><argument index="0" name="arg0" type="RID"></argument><description></description></method><method name="instance_get_base" qualifiers="const"><return type="RID"></return><argument index="0" name="arg0" type="RID"></argument><description></description></method><method name="instance_get_base_aabb" qualifiers="const"><return type="RID"></return><argument index="0" name="arg0" type="RID"></argument><description></description></method><method name="instance_get_object_instance_ID" qualifiers="const"><return type="int"></return><argument index="0" name="arg0" type="RID"></argument><description></description></method><method name="instance_get_room" qualifiers="const"><return type="RID"></return><argument index="0" name="arg0" type="RID"></argument><description></description></method><method name="instance_get_skeleton" qualifiers="const"><return type="RID"></return><argument index="0" name="arg0" type="RID"></argument><description></description></method><method name="instance_get_transform" qualifiers="const"><return type="Transform"></return><argument index="0" name="arg0" type="RID"></argument><description></description></method><method name="instance_is_exterior" qualifiers="const"><return type="bool"></return><argument index="0" name="arg0" type="RID"></argument><description></description></method><method name="instance_set_exterior"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="bool"></argument><description></description></method><method name="instance_set_room"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="RID"></argument><description></description></method><method name="instance_set_transform"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="Transform"></argument><description></description></method><method name="instances_cull_aabb" qualifiers="const"><return type="Array"></return><argument index="0" name="arg0" type="AABB"></argument><argument index="1" name="arg1" type="RID"></argument><description></description></method><method name="instances_cull_convex" qualifiers="const"><return type="Array"></return><argument index="0" name="arg0" type="Array"></argument><argument index="1" name="arg1" type="RID"></argument><description></description></method><method name="instances_cull_ray" qualifiers="const"><return type="Array"></return><argument index="0" name="arg0" type="Vector3"></argument><argument index="1" name="arg1" type="Vector3"></argument><argument index="2" name="arg2" type="RID"></argument><description></description></method><method name="light_create"><return type="RID"></return><argument index="0" name="arg0" type="int"></argument><description></description></method><method name="light_get_color" qualifiers="const"><return type="Color"></return><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="int"></argument><description></description></method><method name="light_get_projector" qualifiers="const"><return type="RID"></return><argument index="0" name="arg0" type="RID"></argument><description></description></method><method name="light_get_type" qualifiers="const"><return type="int"></return><argument index="0" name="arg0" type="RID"></argument><description></description></method><method name="light_get_var" qualifiers="const"><return type="float"></return><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="int"></argument><description></description></method><method name="light_has_shadow" qualifiers="const"><return type="bool"></return><argument index="0" name="arg0" type="RID"></argument><description></description></method><method name="light_is_volumetric" qualifiers="const"><return type="bool"></return><argument index="0" name="arg0" type="RID"></argument><description></description></method><method name="light_set_color"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="int"></argument><argument index="2" name="arg2" type="Color"></argument><description></description></method><method name="light_set_projector"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="RID"></argument><description></description></method><method name="light_set_shadow"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="bool"></argument><description></description></method><method name="light_set_var"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="int"></argument><argument index="2" name="arg2" type="float"></argument><description></description></method><method name="light_set_volumetric"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="bool"></argument><description></description></method><method name="make_sphere_mesh"><return type="RID"></return><argument index="0" name="arg0" type="int"></argument><argument index="1" name="arg1" type="int"></argument><argument index="2" name="arg2" type="float"></argument><description></description></method><method name="material_create"><return type="RID"></return><description></description></method><method name="material_get_blend_mode" qualifiers="const"><return type="int"></return><argument index="0" name="arg0" type="RID"></argument><description></description></method><method name="material_get_flag" qualifiers="const"><return type="bool"></return><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="int"></argument><description></description></method><method name="material_get_line_width" qualifiers="const"><return type="float"></return><argument index="0" name="arg0" type="RID"></argument><description></description></method><method name="material_get_param" qualifiers="const"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="String"></argument><description></description></method><method name="material_get_shader" qualifiers="const"><return type="RID"></return><argument index="0" name="arg0" type="RID"></argument><description></description></method><method name="material_set_blend_mode"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="int"></argument><description></description></method><method name="material_set_flag"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="int"></argument><argument index="2" name="arg2" type="bool"></argument><description></description></method><method name="material_set_line_width"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="float"></argument><description></description></method><method name="material_set_param"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="String"></argument><argument index="2" name="arg2" type="var"></argument><description></description></method><method name="material_set_shader"><argument index="0" name="shader" type="RID"></argument><argument index="1" name="arg1" type="RID"></argument><description></description></method><method name="mesh_add_surface"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="int"></argument><argument index="2" name="arg2" type="Array"></argument><argument index="3" name="arg3" type="Array"></argument><argument index="4" name="arg4" type="bool" default="-1"></argument><description></description></method><method name="mesh_add_surface_from_planes"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="Array"></argument><description></description></method><method name="mesh_create"><return type="RID"></return><description></description></method><method name="mesh_get_surface_count" qualifiers="const"><return type="int"></return><argument index="0" name="arg0" type="RID"></argument><description></description></method><method name="mesh_remove_surface"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="int"></argument><description></description></method><method name="mesh_surface_get_array_index_len" qualifiers="const"><return type="int"></return><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="int"></argument><description></description></method><method name="mesh_surface_get_array_len" qualifiers="const"><return type="int"></return><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="int"></argument><description></description></method><method name="mesh_surface_get_format" qualifiers="const"><return type="int"></return><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="int"></argument><description></description></method><method name="mesh_surface_get_material" qualifiers="const"><return type="RID"></return><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="int"></argument><description></description></method><method name="mesh_surface_get_primitive_type" qualifiers="const"><return type="int"></return><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="int"></argument><description></description></method><method name="mesh_surface_set_material"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="int"></argument><argument index="2" name="arg2" type="RID"></argument><argument index="3" name="arg3" type="bool" default="false"></argument><description></description></method><method name="multimesh_create"><return type="RID"></return><description></description></method><method name="multimesh_get_aabb" qualifiers="const"><return type="AABB"></return><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="AABB"></argument><description></description></method><method name="multimesh_get_mesh" qualifiers="const"><return type="RID"></return><argument index="0" name="arg0" type="RID"></argument><description></description></method><method name="multimesh_instance_get_color" qualifiers="const"><return type="Color"></return><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="int"></argument><description></description></method><method name="multimesh_instance_get_transform" qualifiers="const"><return type="Transform"></return><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="int"></argument><description></description></method><method name="multimesh_instance_set_color"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="int"></argument><argument index="2" name="arg2" type="Color"></argument><description></description></method><method name="multimesh_instance_set_transform"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="int"></argument><argument index="2" name="arg2" type="Transform"></argument><description></description></method><method name="multimesh_set_aabb"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="AABB"></argument><description></description></method><method name="multimesh_set_mesh"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="RID"></argument><description></description></method><method name="particles_create"><return type="RID"></return><description></description></method><method name="particles_get_amount" qualifiers="const"><return type="int"></return><argument index="0" name="arg0" type="RID"></argument><description></description></method><method name="particles_get_attractor_pos" qualifiers="const"><return type="Vector3"></return><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="int"></argument><description></description></method><method name="particles_get_attractor_strength" qualifiers="const"><return type="float"></return><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="int"></argument><description></description></method><method name="particles_get_attractors" qualifiers="const"><return type="int"></return><argument index="0" name="arg0" type="RID"></argument><description></description></method><method name="particles_get_color_phase_color" qualifiers="const"><return type="Color"></return><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="int"></argument><description></description></method><method name="particles_get_color_phase_pos" qualifiers="const"><return type="float"></return><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="int"></argument><description></description></method><method name="particles_get_color_phases" qualifiers="const"><return type="int"></return><argument index="0" name="arg0" type="RID"></argument><description></description></method><method name="particles_get_randomness" qualifiers="const"><return type="float"></return><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="int"></argument><description></description></method><method name="particles_get_variable" qualifiers="const"><return type="float"></return><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="int"></argument><description></description></method><method name="particles_get_visibility_aabb" qualifiers="const"><return type="AABB"></return><argument index="0" name="arg0" type="RID"></argument><description></description></method><method name="particles_has_height_from_velocity" qualifiers="const"><return type="bool"></return><argument index="0" name="arg0" type="RID"></argument><description></description></method><method name="particles_is_emitting" qualifiers="const"><return type="bool"></return><argument index="0" name="arg0" type="RID"></argument><description></description></method><method name="particles_set_amount"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="int"></argument><description></description></method><method name="particles_set_attractor_pos"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="int"></argument><argument index="2" name="arg2" type="Vector3"></argument><description></description></method><method name="particles_set_attractor_strength"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="int"></argument><argument index="2" name="arg2" type="float"></argument><description></description></method><method name="particles_set_attractors"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="int"></argument><description></description></method><method name="particles_set_color_phase_color"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="int"></argument><argument index="2" name="arg2" type="Color"></argument><description></description></method><method name="particles_set_color_phase_pos"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="int"></argument><argument index="2" name="arg2" type="float"></argument><description></description></method><method name="particles_set_color_phases"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="int"></argument><description></description></method><method name="particles_set_emitting"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="bool"></argument><description></description></method><method name="particles_set_height_from_velocity"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="bool"></argument><description></description></method><method name="particles_set_material"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="RID"></argument><argument index="2" name="arg2" type="bool" default="false"></argument><description></description></method><method name="particles_set_randomness"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="int"></argument><argument index="2" name="arg2" type="float"></argument><description></description></method><method name="particles_set_variable"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="int"></argument><argument index="2" name="arg2" type="float"></argument><description></description></method><method name="particles_set_visibility_aabb"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="AABB"></argument><description></description></method><method name="portal_create"><return type="RID"></return><description></description></method><method name="portal_get_disable_distance" qualifiers="const"><return type="float"></return><argument index="0" name="arg0" type="RID"></argument><description></description></method><method name="portal_get_disabled_color" qualifiers="const"><return type="Color"></return><argument index="0" name="arg0" type="RID"></argument><description></description></method><method name="portal_get_shape" qualifiers="const"><return type="Vector2Array"></return><argument index="0" name="arg0" type="RID"></argument><description></description></method><method name="portal_is_enabled" qualifiers="const"><return type="bool"></return><argument index="0" name="arg0" type="RID"></argument><description></description></method><method name="portal_set_disable_distance"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="float"></argument><description></description></method><method name="portal_set_disabled_color"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="Color"></argument><description></description></method><method name="portal_set_enabled"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="bool"></argument><description></description></method><method name="portal_set_shape"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="Vector2Array"></argument><description></description></method><method name="room_create"><return type="RID"></return><description></description></method><method name="room_get_bounds" qualifiers="const"><return type="Dictionary"></return><argument index="0" name="arg0" type="RID"></argument><description></description></method><method name="room_set_bounds"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="Dictionary"></argument><description></description></method><method name="scenario_create"><return type="RID"></return><description></description></method><method name="scenario_set_debug"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="int"></argument><description></description></method><method name="set_default_clear_color"><argument index="0" name="arg0" type="Color"></argument><description></description></method><method name="shader_create"><return type="RID"></return><argument index="0" name="mode" type="int" default="0"></argument><description></description></method><method name="shader_set_mode"><argument index="0" name="shader" type="RID"></argument><argument index="1" name="mode" type="int"></argument><description></description></method><method name="skeleton_bone_get_transform"><return type="Transform"></return><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="int"></argument><description></description></method><method name="skeleton_bone_set_transform"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="int"></argument><argument index="2" name="arg2" type="Transform"></argument><description></description></method><method name="skeleton_create"><return type="RID"></return><description></description></method><method name="skeleton_get_bone_count" qualifiers="const"><return type="int"></return><argument index="0" name="arg0" type="RID"></argument><description></description></method><method name="skeleton_resize"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="int"></argument><description></description></method><method name="sync"><description></description></method><method name="texture_create"><return type="RID"></return><description></description></method><method name="texture_create_from_image"><return type="RID"></return><argument index="0" name="arg0" type="Image"></argument><argument index="1" name="arg1" type="int" default="7"></argument><description></description></method><method name="texture_get_flags" qualifiers="const"><return type="int"></return><argument index="0" name="arg0" type="RID"></argument><description></description></method><method name="texture_get_height" qualifiers="const"><return type="int"></return><argument index="0" name="arg0" type="RID"></argument><description></description></method><method name="texture_get_width" qualifiers="const"><return type="int"></return><argument index="0" name="arg0" type="RID"></argument><description></description></method><method name="texture_set_flags"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="int"></argument><description></description></method><method name="texture_set_shrink_all_x2_on_set_data"><argument index="0" name="shrink" type="bool"></argument><description></description></method><method name="viewport_attach_camera"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="RID" default="RID()"></argument><description></description></method><method name="viewport_attach_canvas"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="RID"></argument><description></description></method><method name="viewport_create"><return type="RID"></return><description></description></method><method name="viewport_get_attached_camera" qualifiers="const"><return type="RID"></return><argument index="0" name="arg0" type="RID"></argument><description></description></method><method name="viewport_get_rect" qualifiers="const"><return type="Rect2"></return><argument index="0" name="arg0" type="RID"></argument><description></description></method><method name="viewport_get_scenario" qualifiers="const"><return type="RID"></return><argument index="0" name="arg0" type="RID"></argument><description></description></method><method name="viewport_remove_canvas"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="RID"></argument><description></description></method><method name="viewport_set_canvas_transform"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="RID"></argument><argument index="2" name="arg2" type="Matrix32"></argument><description></description></method><method name="viewport_set_global_canvas_transform"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="Matrix32"></argument><description></description></method><method name="viewport_set_rect"><argument index="0" name="arg0" type="RID"></argument><argument index="1" name="arg1" type="Rect2"></argument><description></description></method></methods><constants><constant name="NO_INDEX_ARRAY" value="-1"></constant><constant name="CUSTOM_ARRAY_SIZE" value="8"></constant><constant name="ARRAY_WEIGHTS_SIZE" value="4"></constant><constant name="MAX_PARTICLE_COLOR_PHASES" value="4"></constant><constant name="MAX_PARTICLE_ATTRACTORS" value="4"></constant><constant name="MAX_CURSORS" value="8"></constant><constant name="TEXTURE_FLAG_MIPMAPS" value="1"></constant><constant name="TEXTURE_FLAG_REPEAT" value="2"></constant><constant name="TEXTURE_FLAG_FILTER" value="4"></constant><constant name="TEXTURE_FLAG_CUBEMAP" value="2048"></constant><constant name="TEXTURE_FLAGS_DEFAULT" value="7"></constant><constant name="CUBEMAP_LEFT" value="0"></constant><constant name="CUBEMAP_RIGHT" value="1"></constant><constant name="CUBEMAP_BOTTOM" value="2"></constant><constant name="CUBEMAP_TOP" value="3"></constant><constant name="CUBEMAP_FRONT" value="4"></constant><constant name="CUBEMAP_BACK" value="5"></constant><constant name="SHADER_MATERIAL" value="0"></constant><constant name="SHADER_POST_PROCESS" value="2"></constant><constant name="MATERIAL_FLAG_VISIBLE" value="0"></constant><constant name="MATERIAL_FLAG_DOUBLE_SIDED" value="1"></constant><constant name="MATERIAL_FLAG_INVERT_FACES" value="2"></constant><constant name="MATERIAL_FLAG_UNSHADED" value="3"></constant><constant name="MATERIAL_FLAG_ONTOP" value="4"></constant><constant name="MATERIAL_FLAG_MAX" value="7"></constant><constant name="MATERIAL_BLEND_MODE_MIX" value="0"></constant><constant name="MATERIAL_BLEND_MODE_ADD" value="1"></constant><constant name="MATERIAL_BLEND_MODE_SUB" value="2"></constant><constant name="MATERIAL_BLEND_MODE_MUL" value="3"></constant><constant name="FIXED_MATERIAL_PARAM_DIFFUSE" value="0"></constant><constant name="FIXED_MATERIAL_PARAM_DETAIL" value="1"></constant><constant name="FIXED_MATERIAL_PARAM_SPECULAR" value="2"></constant><constant name="FIXED_MATERIAL_PARAM_EMISSION" value="3"></constant><constant name="FIXED_MATERIAL_PARAM_SPECULAR_EXP" value="4"></constant><constant name="FIXED_MATERIAL_PARAM_GLOW" value="5"></constant><constant name="FIXED_MATERIAL_PARAM_NORMAL" value="6"></constant><constant name="FIXED_MATERIAL_PARAM_SHADE_PARAM" value="7"></constant><constant name="FIXED_MATERIAL_PARAM_MAX" value="8"></constant><constant name="FIXED_MATERIAL_TEXCOORD_SPHERE" value="3"></constant><constant name="FIXED_MATERIAL_TEXCOORD_UV" value="0"></constant><constant name="FIXED_MATERIAL_TEXCOORD_UV_TRANSFORM" value="1"></constant><constant name="FIXED_MATERIAL_TEXCOORD_UV2" value="2"></constant><constant name="ARRAY_VERTEX" value="0"></constant><constant name="ARRAY_NORMAL" value="1"></constant><constant name="ARRAY_TANGENT" value="2"></constant><constant name="ARRAY_COLOR" value="3"></constant><constant name="ARRAY_TEX_UV" value="4"></constant><constant name="ARRAY_BONES" value="6"></constant><constant name="ARRAY_WEIGHTS" value="7"></constant><constant name="ARRAY_INDEX" value="8"></constant><constant name="ARRAY_MAX" value="9"></constant><constant name="ARRAY_FORMAT_VERTEX" value="1"></constant><constant name="ARRAY_FORMAT_NORMAL" value="2"></constant><constant name="ARRAY_FORMAT_TANGENT" value="4"></constant><constant name="ARRAY_FORMAT_COLOR" value="8"></constant><constant name="ARRAY_FORMAT_TEX_UV" value="16"></constant><constant name="ARRAY_FORMAT_BONES" value="64"></constant><constant name="ARRAY_FORMAT_WEIGHTS" value="128"></constant><constant name="ARRAY_FORMAT_INDEX" value="256"></constant><constant name="PRIMITIVE_POINTS" value="0"></constant><constant name="PRIMITIVE_LINES" value="1"></constant><constant name="PRIMITIVE_LINE_STRIP" value="2"></constant><constant name="PRIMITIVE_LINE_LOOP" value="3"></constant><constant name="PRIMITIVE_TRIANGLES" value="4"></constant><constant name="PRIMITIVE_TRIANGLE_STRIP" value="5"></constant><constant name="PRIMITIVE_TRIANGLE_FAN" value="6"></constant><constant name="PRIMITIVE_MAX" value="7"></constant><constant name="PARTICLE_LIFETIME" value="0"></constant><constant name="PARTICLE_SPREAD" value="1"></constant><constant name="PARTICLE_GRAVITY" value="2"></constant><constant name="PARTICLE_LINEAR_VELOCITY" value="3"></constant><constant name="PARTICLE_ANGULAR_VELOCITY" value="4"></constant><constant name="PARTICLE_LINEAR_ACCELERATION" value="5"></constant><constant name="PARTICLE_RADIAL_ACCELERATION" value="6"></constant><constant name="PARTICLE_TANGENTIAL_ACCELERATION" value="7"></constant><constant name="PARTICLE_INITIAL_SIZE" value="9"></constant><constant name="PARTICLE_FINAL_SIZE" value="10"></constant><constant name="PARTICLE_INITIAL_ANGLE" value="11"></constant><constant name="PARTICLE_HEIGHT" value="12"></constant><constant name="PARTICLE_HEIGHT_SPEED_SCALE" value="13"></constant><constant name="PARTICLE_VAR_MAX" value="14"></constant><constant name="LIGHT_DIRECTIONAL" value="0"></constant><constant name="LIGHT_OMNI" value="1"></constant><constant name="LIGHT_SPOT" value="2"></constant><constant name="LIGHT_COLOR_DIFFUSE" value="0"></constant><constant name="LIGHT_COLOR_SPECULAR" value="1"></constant><constant name="LIGHT_PARAM_SPOT_ATTENUATION" value="0"></constant><constant name="LIGHT_PARAM_SPOT_ANGLE" value="1"></constant><constant name="LIGHT_PARAM_RADIUS" value="2"></constant><constant name="LIGHT_PARAM_ENERGY" value="3"></constant><constant name="LIGHT_PARAM_ATTENUATION" value="4"></constant><constant name="LIGHT_PARAM_MAX" value="10"></constant><constant name="SCENARIO_DEBUG_DISABLED" value="0"></constant><constant name="SCENARIO_DEBUG_WIREFRAME" value="1"></constant><constant name="SCENARIO_DEBUG_OVERDRAW" value="2"></constant><constant name="INSTANCE_MESH" value="1"></constant><constant name="INSTANCE_MULTIMESH" value="2"></constant><constant name="INSTANCE_PARTICLES" value="4"></constant><constant name="INSTANCE_LIGHT" value="5"></constant><constant name="INSTANCE_ROOM" value="6"></constant><constant name="INSTANCE_PORTAL" value="7"></constant><constant name="INSTANCE_GEOMETRY_MASK" value="30"></constant><constant name="INFO_OBJECTS_IN_FRAME" value="0"></constant><constant name="INFO_VERTICES_IN_FRAME" value="1"></constant><constant name="INFO_MATERIAL_CHANGES_IN_FRAME" value="2"></constant><constant name="INFO_SHADER_CHANGES_IN_FRAME" value="3"></constant><constant name="INFO_SURFACE_CHANGES_IN_FRAME" value="4"></constant><constant name="INFO_DRAW_CALLS_IN_FRAME" value="5"></constant><constant name="INFO_USAGE_VIDEO_MEM_TOTAL" value="6"></constant><constant name="INFO_VIDEO_MEM_USED" value="7"></constant><constant name="INFO_TEXTURE_MEM_USED" value="8"></constant><constant name="INFO_VERTEX_MEM_USED" value="9"></constant></constants></class>