<class name="Vector3" category="Built-In Types"><brief_description>
	Vector class, which performs basic 3D vector math operations.</brief_description><description>
	Vector3 is one of the core classes of the engine, and includes several built-in helper functions to perform basic vector math operations.</description><methods><method name="Vector3"><return type="Vector3"></return><argument index="0" name="x" type="float"></argument><argument index="1" name="y" type="float"></argument><argument index="2" name="z" type="float"></argument><description>
			Returns a Vector3 with the given components.</description></method><method name="abs"><return type="Vector3"></return><description>
			Returns a new vector with all components in absolute values (e.g. positive).</description></method><method name="ceil"><return type="Vector3"></return><description>
			Returns a new vector with all components rounded up.</description></method><method name="cross"><return type="Vector3"></return><argument index="0" name="b" type="Vector3"></argument><description>
			Return the cross product with b.</description></method><method name="cubic_interpolate"><return type="Vector3"></return><argument index="0" name="b" type="Vector3"></argument><argument index="1" name="pre_a" type="Vector3"></argument><argument index="2" name="post_b" type="Vector3"></argument><argument index="3" name="t" type="float"></argument><description>
			Perform a cubic interpolation between vectors pre_a, a, b, post_b (a is current), by the given amount (t).</description></method><method name="distance_squared_to"><return type="float"></return><argument index="0" name="b" type="Vector3"></argument><description>
			Return the squared distance (distance minus the last square root) to b. Prefer this function over distance_to if you need to sort vectors or need the squared distance for some formula.</description></method><method name="distance_to"><return type="float"></return><argument index="0" name="b" type="Vector3"></argument><description>
			Return the distance to b.</description></method><method name="dot"><return type="float"></return><argument index="0" name="b" type="Vector3"></argument><description>
			Return the dot product with b.</description></method><method name="floor"><return type="Vector3"></return><description>
			Returns a new vector with all components rounded down.</description></method><method name="inverse"><return type="Vector3"></return><description>
			Returns the inverse of the vector. This is the same as Vector3( 1.0 / v.x, 1.0 / v.y, 1.0 / v.z )</description></method><method name="length"><return type="float"></return><description>
			Return the length of the vector.</description></method><method name="length_squared"><return type="float"></return><description>
			Return the length of the vector, squared. Prefer this function over "length" if you need to sort vectors or need the squared length for some formula.</description></method><method name="linear_interpolate"><return type="Vector3"></return><argument index="0" name="b" type="Vector3"></argument><argument index="1" name="t" type="float"></argument><description>
			Linearly interpolates the vector to a given one (b), by the given amount (t).</description></method><method name="max_axis"><return type="int"></return><description>
			Returns AXIS_X, AXIS_Y or AXIS_Z depending on which axis is the largest.</description></method><method name="min_axis"><return type="int"></return><description>
			Returns AXIS_X, AXIS_Y or AXIS_Z depending on which axis is the smallest.</description></method><method name="normalized"><return type="Vector3"></return><description>
			Return a copy of the normalized vector to unit length. This is the same as v / v.length().</description></method><method name="reflect"><return type="Vector3"></return><argument index="0" name="by" type="Vector3"></argument><description>
			Like "slide", but reflects the Vector instead of continuing along the wall.</description></method><method name="rotated"><return type="Vector3"></return><argument index="0" name="axis" type="Vector3"></argument><argument index="1" name="phi" type="float"></argument><description>
			Rotates the vector around some axis by phi radians.</description></method><method name="slide"><return type="Vector3"></return><argument index="0" name="by" type="Vector3"></argument><description>
			Slides the vector along a wall.</description></method><method name="snapped"><return type="Vector3"></return><argument index="0" name="by" type="float"></argument><description>
			Return a copy of the vector, snapped to the lowest neared multiple.</description></method></methods><members><member name="x" type="float">
			X component of the vector.</member><member name="y" type="float">
			Y component of the vector.</member><member name="z" type="float">
			Z component of the vector.</member></members><constants><constant name="AXIS_X" value="0">
			Enumerated value for the X axis. Returned by functions like max_axis or min_axis.</constant><constant name="AXIS_Y" value="1">
			Enumerated value for the Y axis.</constant><constant name="AXIS_Z" value="2">
			Enumerated value for the Z axis.</constant></constants></class>