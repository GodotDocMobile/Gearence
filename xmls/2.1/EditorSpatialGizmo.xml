<class name="EditorSpatialGizmo" inherits="SpatialGizmo" category="Core"><brief_description>
		Custom gizmo for editing Spatial objects.</brief_description><description>
		Custom gizmo that is used for providing custom visualization and editing (handles) for 3D Spatial objects. These are created by [method EditorPlugin.create_spatial_gizmo].</description><methods><method name="add_collision_segments"><argument index="0" name="segments" type="Vector3Array"></argument><description></description></method><method name="add_collision_triangles"><argument index="0" name="triangles" type="TriangleMesh"></argument><description>
				Add collision triangles to the gizmo for picking. A [TriangleMesh] can be generated from a regular [Mesh] too. Call this function during [method redraw].</description></method><method name="add_handles"><argument index="0" name="handles" type="Vector3Array"></argument><argument index="1" name="billboard" type="bool" default="false"></argument><argument index="2" name="secondary" type="bool" default="false"></argument><description>
				Add a list of handles (points) which can be used to deform the object being edited.
				There are virtual functions which will be called upon editing of these handles. Call this function during [method redraw].</description></method><method name="add_lines"><argument index="0" name="lines" type="Vector3Array"></argument><argument index="1" name="material" type="Material"></argument><argument index="2" name="billboard" type="bool" default="false"></argument><description>
				Add lines to the gizmo (as sets of 2 points), with a given material. The lines are used for visualizing the gizmo. Call this function during [method redraw].</description></method><method name="add_mesh"><argument index="0" name="mesh" type="Mesh"></argument><argument index="1" name="billboard" type="bool" default="false"></argument><argument index="2" name="skeleton" type="RID" default="RID()"></argument><description>
				Add a mesh to the gizmo, this is used for visualization. Call this function during [method redraw].</description></method><method name="add_unscaled_billboard"><argument index="0" name="material" type="Material"></argument><argument index="1" name="default_scale" type="float" default="1"></argument><description>
				Add an unscaled billboard for visualization. Call this function during [method redraw].</description></method><method name="clear"><description></description></method><method name="commit_handle" qualifiers="virtual"><argument index="0" name="index" type="int"></argument><argument index="1" name="restore" type="Variant"></argument><argument index="2" name="cancel" type="bool"></argument><description>
				Commit a handle being edited (handles must have been prevously added by [method add_handles]).
				If the cancel parameter is true, an option to restore the edited value to the original is provided.</description></method><method name="get_handle_name" qualifiers="virtual"><return type="String"></return><argument index="0" name="index" type="int"></argument><description>
				Get the name of an edited handle (handles must have been previously added by [method add_handles]).
				Handles can be named for reference to the user when editing.</description></method><method name="get_handle_value" qualifiers="virtual"><return type="Variant"></return><argument index="0" name="index" type="int"></argument><description>
				Get actual value of a handle. This value can be anything and used for eventually undoing the motion when calling [method commit_handle]</description></method><method name="redraw" qualifiers="virtual"><description>
				This function is called when the Spatial this gizmo refers to changes (the [method Spatial.update_gizmo] is called).</description></method><method name="set_handle" qualifiers="virtual"><argument index="0" name="index" type="int"></argument><argument index="1" name="camera" type="Camera"></argument><argument index="2" name="point" type="Vector2"></argument><description>
				This function is used when the user drags a gizmo handle (previously added with [method add_handles]) in screen coordinates.
				The [Camera] is also provided so screen coordinates can be converted to raycasts.</description></method><method name="set_spatial_node"><argument index="0" name="node" type="Spatial"></argument><description>
				Call this function once and upon creation of the gizmo, otherwise no other function will work. The argument is the node being edited by the gizmo.</description></method></methods><constants></constants></class>