<class category="Built-In Types" name="AABB"><brief_description>
		Axis-Aligned Bounding Box.</brief_description><description>
		AABB provides an 3D Axis-Aligned Bounding Box. It consists of a position, a size, and several utility functions. It is typically used for simple (fast) overlap tests.</description><methods><method name="AABB"><return type="AABB"></return><argument index="0" name="pos" type="Vector3"></argument><argument index="1" name="size" type="Vector3"></argument><description>
				Optional constructor, accepts position and size.</description></method><method name="encloses"><return type="bool"></return><argument index="0" name="with" type="AABB"></argument><description>
				Return true if this [AABB] completely encloses another one.</description></method><method name="expand"><return type="AABB"></return><argument index="0" name="to_point" type="Vector3"></argument><description>
				Return this [AABB] expanded to include a given point.</description></method><method name="get_area"><return type="float"></return><description>
				Get the area of the [AABB].</description></method><method name="get_endpoint"><return type="Vector3"></return><argument index="0" name="idx" type="int"></argument><description>
				Get the position of the 8 endpoints of the [AABB] in space.</description></method><method name="get_longest_axis"><return type="Vector3"></return><description>
				Return the normalized longest axis of the [AABB].</description></method><method name="get_longest_axis_index"><return type="int"></return><description>
				Return the index of the longest axis of the [AABB] (according to [Vector3]::AXIS* enum).</description></method><method name="get_longest_axis_size"><return type="float"></return><description>
				Return the scalar length of the longest axis of the [AABB].</description></method><method name="get_shortest_axis"><return type="Vector3"></return><description>
				Return the normalized shortest axis of the [AABB].</description></method><method name="get_shortest_axis_index"><return type="int"></return><description>
				Return the index of the shortest axis of the [AABB] (according to [Vector3]::AXIS* enum).</description></method><method name="get_shortest_axis_size"><return type="float"></return><description>
				Return the scalar length of the shortest axis of the [AABB].</description></method><method name="get_support"><return type="Vector3"></return><argument index="0" name="dir" type="Vector3"></argument><description>
				Return the support point in a given direction. This is useful for collision detection algorithms.</description></method><method name="grow"><return type="AABB"></return><argument index="0" name="by" type="float"></argument><description>
				Return a copy of the [AABB] grown a given amount of units towards all the sides.</description></method><method name="has_no_area"><return type="bool"></return><description>
				Return true if the [AABB] is flat or empty.</description></method><method name="has_no_surface"><return type="bool"></return><description>
				Return true if the [AABB] is empty.</description></method><method name="has_point"><return type="bool"></return><argument index="0" name="point" type="Vector3"></argument><description>
				Return true if the [AABB] contains a point.</description></method><method name="intersection"><return type="AABB"></return><argument index="0" name="with" type="AABB"></argument><description>
				Return the intersection between two [AABB]. An empty AABB (size 0,0,0) is returned on failure.</description></method><method name="intersects"><return type="bool"></return><argument index="0" name="with" type="AABB"></argument><description>
				Return true if the [AABB] overlaps with another.</description></method><method name="intersects_plane"><return type="bool"></return><argument index="0" name="plane" type="Plane"></argument><description>
				Return true if the [AABB] is at both sides of a plane.</description></method><method name="intersects_segment"><return type="bool"></return><argument index="0" name="from" type="Vector3"></argument><argument index="1" name="to" type="Vector3"></argument><description>
				Return true if the [AABB] intersects the line segment between from and to</description></method><method name="merge"><return type="AABB"></return><argument index="0" name="with" type="AABB"></argument><description>
				Combine this [AABB] with another, a larger one is returned that contains both.</description></method></methods><members><member name="end" type="Vector3">
			Ending corner.</member><member name="pos" type="Vector3">
			Position (starting corner).</member><member name="size" type="Vector3">
			Size from position to end.</member></members><constants></constants></class>