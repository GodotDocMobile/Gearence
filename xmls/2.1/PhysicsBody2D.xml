<class name="PhysicsBody2D" inherits="CollisionObject2D" category="Core"><brief_description>Base class for all objects affected by physics.
</brief_description><description>PhysicsBody2D is an abstract base class for implementing a physics body. All *Body2D types inherit from it.
</description><methods><method name="add_collision_exception_with"><argument index="0" name="body" type="PhysicsBody2D"></argument><description>Adds a body to the collision exception list. This list contains bodies that this body will not collide with.
</description></method><method name="get_collision_mask" qualifiers="const"><return type="int"></return><description>Return the physics layers this area can scan for collisions.
</description></method><method name="get_collision_mask_bit" qualifiers="const"><return type="bool"></return><argument index="0" name="bit" type="int"></argument><description>Return an individual bit on the collision mask.
</description></method><method name="get_layer_mask" qualifiers="const"><return type="int"></return><description>Return the physics layer this area is in.
</description></method><method name="get_layer_mask_bit" qualifiers="const"><return type="bool"></return><argument index="0" name="bit" type="int"></argument><description>Return an individual bit on the collision mask.
</description></method><method name="get_one_way_collision_direction" qualifiers="const"><return type="Vector2"></return><description>Return the direction used for one-way collision detection.
</description></method><method name="get_one_way_collision_max_depth" qualifiers="const"><return type="float"></return><description>Return how far a body can go through this one, when it allows one-way collisions.
</description></method><method name="remove_collision_exception_with"><argument index="0" name="body" type="PhysicsBody2D"></argument><description>Removes a body from the collision exception list.
</description></method><method name="set_collision_mask"><argument index="0" name="mask" type="int"></argument><description>Set the physics layers this area can scan for collisions.
</description></method><method name="set_collision_mask_bit"><argument index="0" name="bit" type="int"></argument><argument index="1" name="value" type="bool"></argument><description>Set/clear individual bits on the collision mask. This makes selecting the areas scanned easier.
</description></method><method name="set_layer_mask"><argument index="0" name="mask" type="int"></argument><description>Set the physics layers this area is in.
Collidable objects can exist in any of 32 different layers. These layers are not visual, but more of a tagging system instead. A collidable can use these layers/tags to select with which objects it can collide, using [method set_collision_mask].
A contact is detected if object A is in any of the layers that object B scans, or object B is in any layer scanned by object A.
</description></method><method name="set_layer_mask_bit"><argument index="0" name="bit" type="int"></argument><argument index="1" name="value" type="bool"></argument><description>Set/clear individual bits on the layer mask. This makes getting a body in/out of only one layer easier.
</description></method><method name="set_one_way_collision_direction"><argument index="0" name="dir" type="Vector2"></argument><description>Set a direction from which bodies can go through this one; that is, the passed vector is the normal of the pass-through side of the surface. If this value is different from (0,0), any movement within 90 degrees of the opposite of this vector is considered an valid movement. Set this direction to (0,0) to disable one-way collisions.
</description></method><method name="set_one_way_collision_max_depth"><argument index="0" name="depth" type="float"></argument><description>Set how deep at most a body can be with respect to this one for the physics server to force it to a non-overlapping position, if it allows one-way collisions (see [method body_set_one_way_collision_direction]).
</description></method></methods><constants></constants></class>