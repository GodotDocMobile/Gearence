<class category="Core" inherits="Node" name="StreamPlayer"><brief_description>
		Base class for audio stream playback.</brief_description><description>
		Base class for audio stream playback. Audio stream players inherit from it.</description><methods><method name="get_buffering_msec" qualifiers="const"><return type="int"></return><description>
				Return the size of the audio buffer.</description></method><method name="get_length" qualifiers="const"><return type="float"></return><description>
				Return the length of the stream, in seconds.</description></method><method name="get_loop_count" qualifiers="const"><return type="int"></return><description>
				Return the number of times the playback has looped.</description></method><method name="get_loop_restart_time" qualifiers="const"><return type="float"></return><description>
				Return the point in time the stream will rewind to, when looping.</description></method><method name="get_pos" qualifiers="const"><return type="float"></return><description>
				Return the playback position, in seconds.</description></method><method name="get_stream" qualifiers="const"><return type="AudioStream"></return><description>
				Return the currently assigned stream.</description></method><method name="get_stream_name" qualifiers="const"><return type="String"></return><description>
				Return the name of the currently assigned stream. This is not the file name, but a field inside the file. If no stream is assigned, if returns "&lt;No Stream&gt;".</description></method><method name="get_volume" qualifiers="const"><return type="float"></return><description>
				Return the playback volume for this player.</description></method><method name="get_volume_db" qualifiers="const"><return type="float"></return><description>
				Return the playback volume for this player, in decibels.</description></method><method name="has_autoplay" qualifiers="const"><return type="bool"></return><description>
				Return whether this player will start playing as soon as it enters the scene tree.</description></method><method name="has_loop" qualifiers="const"><return type="bool"></return><description>
				Return whether the stream will be restarted at the end.</description></method><method name="is_paused" qualifiers="const"><return type="bool"></return><description>
				Return whether the playback is currently paused.</description></method><method name="is_playing" qualifiers="const"><return type="bool"></return><description>
				Return whether this player is playing.</description></method><method name="play"><argument default="0" index="0" name="offset" type="float"></argument><description>
				Play the currently assigned stream, starting from a given position (in seconds).</description></method><method name="seek_pos"><argument index="0" name="time" type="float"></argument><description>
				Set the playback position, in seconds.</description></method><method name="set_autoplay"><argument index="0" name="enabled" type="bool"></argument><description>
				Set whether this player will start playing as soon as it enters the scene tree.</description></method><method name="set_buffering_msec"><argument index="0" name="msec" type="int"></argument><description>
				Set the size (in milliseconds) of the audio buffer. A long audio buffer protects better against slowdowns, but responds worse to changes (in volume, stream played...). A shorter buffer takes less time to respond to changes, but may stutter if the application suffers some slowdown.
				Default is 500 milliseconds.</description></method><method name="set_loop"><argument index="0" name="enabled" type="bool"></argument><description>
				Set whether the stream will be restarted at the end.</description></method><method name="set_loop_restart_time"><argument index="0" name="secs" type="float"></argument><description>
				Set the point in time the stream will rewind to, when looping.</description></method><method name="set_paused"><argument index="0" name="paused" type="bool"></argument><description>
				Pause stream playback.</description></method><method name="set_stream"><argument index="0" name="stream" type="AudioStream"></argument><description>
				Set the [EventStream] this player will play.</description></method><method name="set_volume"><argument index="0" name="volume" type="float"></argument><description>
				Set the playback volume for this player. This is a float between 0.0 (silent) and 1.0 (full volume). Values over 1.0 will amplify sound even more, but may introduce distortion. Negative values will just invert the output waveform, which produces no audible difference.</description></method><method name="set_volume_db"><argument index="0" name="db" type="float"></argument><description>
				Set the playback volume for this player, in decibels. This is a float between -80.0 (silent) and 0.0 (full volume). Values under -79.0 get truncated to -80, but values over 0.0 do not, so the warnings for overamplifying (see [method set_volume]) still apply.</description></method><method name="stop"><description>
				Stop the playback.</description></method></methods><signals><signal name="finished"><description>
				This signal triggers when the player stops playing. It will not trigger on each loop.</description></signal></signals><constants></constants></class>