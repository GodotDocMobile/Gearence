<class category="Built-In Types" name="Image"><brief_description>
		Image datatype.</brief_description><description>
		Built in native image datatype. Contains image data, which can be converted to a texture, and several functions to interact with it.</description><methods><method name="Image"><return type="Image"></return><argument index="0" name="width" type="int"></argument><argument index="1" name="height" type="int"></argument><argument index="2" name="mipmaps" type="bool"></argument><argument index="3" name="format" type="int"></argument><description>
				Create an empty image of a specific size and format.</description></method><method name="blend_rect"><argument index="0" name="src" type="Image"></argument><argument index="1" name="src_rect" type="Rect2"></argument><argument default="0" index="2" name="dest" type="Vector2"></argument><description>
				Alpha-blends a "src_rect" [Rect2] from "src" [Image] to this [Image] on coordinates "dest".</description></method><method name="blend_rect_mask"><argument index="0" name="src" type="Image"></argument><argument index="1" name="mask" type="Image"></argument><argument index="2" name="src_rect" type="Rect2"></argument><argument default="0" index="3" name="dest" type="Vector2"></argument><description>
				Alpha-blends a "src_rect" [Rect2] from "src" [Image] to this [Image] using a "mask" [Image] on coordinates "dest". Alpha channels are required for both "src" and "mask", dest pixels and src pixels will blend if the corresponding mask pixel's alpha value is not 0. "src" [Image] and "mask" [Image] *must* have the same size (width and height) but they can have different formats</description></method><method name="blit_rect"><argument index="0" name="src" type="Image"></argument><argument index="1" name="src_rect" type="Rect2"></argument><argument default="0" index="2" name="dest" type="Vector2"></argument><description>
				Copy a "src_rect" [Rect2] from "src" [Image] to this [Image] on coordinates "dest".</description></method><method name="blit_rect_mask"><argument index="0" name="src" type="Image"></argument><argument index="1" name="mask" type="Image"></argument><argument index="2" name="src_rect" type="Rect2"></argument><argument default="0" index="3" name="dest" type="Vector2"></argument><description>
				Blits a "src_rect" [Rect2] from "src" [Image] to this [Image] using a "mask" [Image] on coordinates "dest". Alpha channel is required for "mask", will copy src pixel onto dest if the corresponding mask pixel's alpha value is not 0. "src" [Image] and "mask" [Image] *must* have the same size (width and height) but they can have different formats</description></method><method name="brush_transfer"><argument index="0" name="src" type="Image"></argument><argument index="1" name="brush" type="Image"></argument><argument default="0" index="2" name="pos" type="Vector2"></argument><description>
				Transfer data from "src" to this [Image] using a "brush" as a mask/brush on coordinates "pos".</description></method><method name="brushed"><return type="Image"></return><argument index="0" name="src" type="Image"></argument><argument index="1" name="brush" type="Image"></argument><argument default="0" index="2" name="pos" type="Vector2"></argument><description>
				Return a new [Image] from this [Image] that is created by brushhing see [method brush_transfer].</description></method><method name="compressed"><return type="Image"></return><argument default="0" index="0" name="format" type="int"></argument><description>
				Return a new compressed [Image] from this [Image] using one of [Image].COMPRESS_*.</description></method><method name="converted"><return type="Image"></return><argument default="0" index="0" name="format" type="int"></argument><description>
				Return a new [Image] from this [Image] with a different format.</description></method><method name="decompressed"><return type="Image"></return><description>
				Return a new decompressed [Image].</description></method><method name="empty"><return type="bool"></return><description>
				Return whether this [Image] is empty(no data).</description></method><method name="fill"><argument default="0" index="0" name="color" type="Color"></argument><description>
				Fills an [Image] with a specified [Color]</description></method><method name="fix_alpha_edges"><description></description></method><method name="get_data"><return type="RawArray"></return><description>
				Return the raw data of the [Image].</description></method><method name="get_format"><return type="int"></return><description>
				Return the format of the [Image], one of [Image].FORMAT_*.</description></method><method name="get_height"><return type="int"></return><description>
				Return the height of the [Image].</description></method><method name="get_pixel"><return type="Color"></return><argument index="0" name="x" type="int"></argument><argument index="1" name="y" type="int"></argument><argument default="0" index="2" name="mipmap_level" type="int"></argument><description>
				Return the color of the pixel in the [Image] on coordinates "x,y" on mipmap level "mipmap_level".</description></method><method name="get_rect"><return type="Image"></return><argument default="0" index="0" name="area" type="Rect2"></argument><description>
				Return a new [Image] that is a copy of "area" in this [Image].</description></method><method name="get_used_rect"><return type="Rect2"></return><description>
				Return the area of this [Image] that is used/visibly colored/opaque.</description></method><method name="get_width"><return type="int"></return><description>
				Return the width of the [Image].</description></method><method name="load"><return type="int"></return><argument default="0" index="0" name="path" type="String"></argument><description>
				Load an [Image].</description></method><method name="put_pixel"><argument index="0" name="x" type="int"></argument><argument index="1" name="y" type="int"></argument><argument index="2" name="color" type="Color"></argument><argument default="0" index="3" name="mipmap_level" type="int"></argument><description>
				Put a pixel of "color" on coordinates "x,y" on mipmap level "mipmap_level".</description></method><method name="resized"><return type="Image"></return><argument index="0" name="x" type="int"></argument><argument index="1" name="y" type="int"></argument><argument default="1" index="2" name="interpolation" type="int"></argument><description>
				Return a new [Image] from this [Image] that is resized to size "x,y" using [Image].INTERPOLATE_*.</description></method><method name="save_png"><return type="int"></return><argument default="0" index="0" name="path" type="String"></argument><description>
				Save this [Image] as a png.</description></method></methods><constants><constant name="COMPRESS_BC" value="0"></constant><constant name="COMPRESS_PVRTC2" value="1"></constant><constant name="COMPRESS_PVRTC4" value="2"></constant><constant name="COMPRESS_ETC" value="3"></constant><constant name="FORMAT_GRAYSCALE" value="0"></constant><constant name="FORMAT_INTENSITY" value="1"></constant><constant name="FORMAT_GRAYSCALE_ALPHA" value="2"></constant><constant name="FORMAT_RGB" value="3"></constant><constant name="FORMAT_RGBA" value="4"></constant><constant name="FORMAT_INDEXED" value="5"></constant><constant name="FORMAT_INDEXED_ALPHA" value="6"></constant><constant name="FORMAT_YUV_422" value="7"></constant><constant name="FORMAT_YUV_444" value="8"></constant><constant name="FORMAT_BC1" value="9"></constant><constant name="FORMAT_BC2" value="10"></constant><constant name="FORMAT_BC3" value="11"></constant><constant name="FORMAT_BC4" value="12"></constant><constant name="FORMAT_BC5" value="13"></constant><constant name="FORMAT_PVRTC2" value="14"></constant><constant name="FORMAT_PVRTC2_ALPHA" value="15"></constant><constant name="FORMAT_PVRTC4" value="16"></constant><constant name="FORMAT_PVRTC4_ALPHA" value="17"></constant><constant name="FORMAT_ETC" value="18"></constant><constant name="FORMAT_ATC" value="19"></constant><constant name="FORMAT_ATC_ALPHA_EXPLICIT" value="20"></constant><constant name="FORMAT_ATC_ALPHA_INTERPOLATED" value="21"></constant><constant name="FORMAT_CUSTOM" value="22"></constant><constant name="INTERPOLATE_NEAREST" value="0"></constant><constant name="INTERPOLATE_BILINEAR" value="1"></constant><constant name="INTERPOLATE_CUBIC" value="2"></constant></constants></class>