<?xml version="1.0" encoding="UTF-8" ?>
<class name="Physics2DDirectBodyState" inherits="Object" category="Core" version="3.0.7">
	<brief_description>
		Direct access object to a physics body in the [Physics2DServer].
	</brief_description>
	<description>
		Direct access object to a physics body in the [Physics2DServer]. This object is passed via the direct state callback of rigid/character bodies, and is intended for changing the direct state of that body.
	</description>
	<tutorials>
	</tutorials>
	<demos>
	</demos>
	<methods>
		<method name="get_contact_collider" qualifiers="const">
			<return type="RID">
			</return>
			<argument index="0" name="contact_idx" type="int">
			</argument>
			<description>
				Return the [RID] of the collider.
			</description>
		</method>
		<method name="get_contact_collider_id" qualifiers="const">
			<return type="int">
			</return>
			<argument index="0" name="contact_idx" type="int">
			</argument>
			<description>
				Return the object id of the collider.
			</description>
		</method>
		<method name="get_contact_collider_object" qualifiers="const">
			<return type="Object">
			</return>
			<argument index="0" name="contact_idx" type="int">
			</argument>
			<description>
				Return the collider object, this depends on how it was created (will return a scene node if such was used to create it).
			</description>
		</method>
		<method name="get_contact_collider_position" qualifiers="const">
			<return type="Vector2">
			</return>
			<argument index="0" name="contact_idx" type="int">
			</argument>
			<description>
				Return the contact position in the collider.
			</description>
		</method>
		<method name="get_contact_collider_shape" qualifiers="const">
			<return type="int">
			</return>
			<argument index="0" name="contact_idx" type="int">
			</argument>
			<description>
				Return the collider shape index.
			</description>
		</method>
		<method name="get_contact_collider_shape_metadata" qualifiers="const">
			<return type="Variant">
			</return>
			<argument index="0" name="contact_idx" type="int">
			</argument>
			<description>
				Return the metadata of the collided shape. This metadata is different from [method Object.get_meta], and is set with [method Physics2DServer.shape_set_data].
			</description>
		</method>
		<method name="get_contact_collider_velocity_at_position" qualifiers="const">
			<return type="Vector2">
			</return>
			<argument index="0" name="contact_idx" type="int">
			</argument>
			<description>
				Return the linear velocity vector at contact point of the collider.
			</description>
		</method>
		<method name="get_contact_count" qualifiers="const">
			<return type="int">
			</return>
			<description>
				Return the amount of contacts this body has with other bodies. Note that by default this returns 0 unless bodies are configured to log contacts.
			</description>
		</method>
		<method name="get_contact_local_normal" qualifiers="const">
			<return type="Vector2">
			</return>
			<argument index="0" name="contact_idx" type="int">
			</argument>
			<description>
				Return the local normal (of this body) of the contact point.
			</description>
		</method>
		<method name="get_contact_local_position" qualifiers="const">
			<return type="Vector2">
			</return>
			<argument index="0" name="contact_idx" type="int">
			</argument>
			<description>
				Return the local position (of this body) of the contact point.
			</description>
		</method>
		<method name="get_contact_local_shape" qualifiers="const">
			<return type="int">
			</return>
			<argument index="0" name="contact_idx" type="int">
			</argument>
			<description>
				Return the local shape index of the collision.
			</description>
		</method>
		<method name="get_space_state">
			<return type="Physics2DDirectSpaceState">
			</return>
			<description>
				Return the current state of space, useful for queries.
			</description>
		</method>
		<method name="integrate_forces">
			<return type="void">
			</return>
			<description>
				Call the built-in force integration code.
			</description>
		</method>
	</methods>
	<members>
		<member name="angular_velocity" type="float" setter="set_angular_velocity" getter="get_angular_velocity">
			The angular velocity of the body.
		</member>
		<member name="inverse_inertia" type="float" setter="" getter="get_inverse_inertia">
			The inverse of the inertia of the body.
		</member>
		<member name="inverse_mass" type="float" setter="" getter="get_inverse_mass">
			The inverse of the mass of the body.
		</member>
		<member name="linear_velocity" type="Vector2" setter="set_linear_velocity" getter="get_linear_velocity">
			The linear velocity of the body.
		</member>
		<member name="sleeping" type="bool" setter="set_sleep_state" getter="is_sleeping">
			[code]true[/code] if this body is currently sleeping (not active).
		</member>
		<member name="step" type="float" setter="" getter="get_step">
			The timestep (delta) used for the simulation.
		</member>
		<member name="total_angular_damp" type="float" setter="" getter="get_total_angular_damp">
			The rate at which the body stops rotating, if there are not any other forces moving it.
		</member>
		<member name="total_gravity" type="Vector2" setter="" getter="get_total_gravity">
			The total gravity vector being currently applied to this body.
		</member>
		<member name="total_linear_damp" type="float" setter="" getter="get_total_linear_damp">
			The rate at which the body stops moving, if there are not any other forces moving it.
		</member>
		<member name="transform" type="Transform2D" setter="set_transform" getter="get_transform">
			The transformation matrix of the body.
		</member>
	</members>
	<constants>
	</constants>
</class>
